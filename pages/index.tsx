import Head from "next/head";
import { generateRSS } from "../rssUtil";
import { Markdown } from "../components/Markdown";
import { PostData, loadBlogPosts, loadMarkdownFile } from "../loader";
import { PostCard } from "../components/PostCard";
import React from "react";
import Footer from "../components/Footer";

const Home = (props: {
  introduction: string;
  features: string;
  obombe: string;
  chegoyahochu: string;
  chtoyaumeyu: string;
  readme: string;
  posts: PostData[];
}) => {
  return (
    <>
      <div className="content">
        <Head>
          <title>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –î.–° –®–ê–•–û–í</title>
          <link rel="icon" href="/img/smart-human.png" />
          <meta
            name="keywords"
            content="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –®–∞—Ö–æ–≤ –î–µ–Ω–∏—Å, –®–∞—Ö–æ–≤ –î–µ–Ω–∏—Å –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, —à–∞—Ö–æ–≤, –¥–µ–Ω–∏—Å, —à–∞—Ö–æ–≤ –¥–µ–Ω–∏—Å, –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –î.–°
     "
          />
        </Head>

        <div className="introduction">
          <h1>
            –ü—Ä–∏–≤–µ—Ç! üôã‚Äç‚ôÇÔ∏è
            <br />
            –≠—Ç–æ –º–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, —Ç—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ –º–Ω–æ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è üóíÔ∏è
          </h1>
          <br />
          <hr />
        </div>

        <div className="section">
          <h2>–û–±–æ –º–Ω–µüßô‚Äç‚ôÇÔ∏è</h2>
          <div className="medium-wide">
            <Markdown source={props.obombe} />
          </div>
        </div>
        <div className="section">
          <h2>–ß—Ç–æ —è —Ö–æ—á—Éü§ñ</h2>
          <div className="medium-wide">
            <Markdown source={props.chegoyahochu} />
          </div>
        </div>
        <div className="section">
          <h2>–ß—Ç–æ —è —É–º–µ—éüìñ</h2>
          <div className="medium-wide">
            <Markdown source={props.chtoyaumeyu} />
          </div>
        </div>
        <hr />
        <div className="section">
          <h1 id="id">–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã</h1>
          <div className="post-card-container">
            {props.posts.map((post, j) => {
              return <PostCard post={post} key={j} />;
            })}
          </div>
        </div>

        <div className="section">
          <h2>–í—Ä–µ–º—è —Ñ–∞–∫—Ç–æ–≤</h2>
          <blockquote>
            <p>
              <em>
                –≠—Ç–æ—Ç —Å–∞–π—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞{" "}
                <a href="https://nextjs.org/" className="siniy">
                  Next js
                </a>{" "}
                +{" "}
                <a href="https://github.com/colinhacks/devii" className="siniy">
                  Devii
                </a>
              </em>
            </p>
          </blockquote>
        </div>

        {/* <div className="section">
        <h2>README.md</h2>
        <p>
          Below is the README.md for devii. It was imported and rendered using
          Next.js dynamic imports. The rest of this page (including this
          paragraph) are rendered with React. You can also read the README on
          GitHub at{' '}
          <a href="https://github.com/colinhacks/devii">
            https://github.com/colinhacks/devii
          </a>
          .
        </p>
      </div> */}

        {/* <div className="section alternate">
        <div className="narrow">
          <Markdown source={props.readme} />
        </div>
      </div> */}
      </div>
      <Footer />
    </>
  );
};

export default Home;

export const getStaticProps = async () => {
  const introduction = await loadMarkdownFile("introduction.md");
  const features = await loadMarkdownFile("features.md");
  const chtoyaumeyu = await loadMarkdownFile("chtoyaumeyu.md");
  const obombe = await loadMarkdownFile("obombe.md");
  const chegoyahochu = await loadMarkdownFile("chegoyahochu.md");
  const readmeFile = await import(`../${"README.md"}`);
  const readme = readmeFile.default;
  const posts = await loadBlogPosts();

  // comment out to turn off RSS generation during build step.
  await generateRSS(posts);

  const props = {
    introduction: introduction.contents,
    features: features.contents,
    obombe: obombe.contents,
    chegoyahochu: chegoyahochu.contents,
    readme: readme,
    chtoyaumeyu: chtoyaumeyu.contents,
    posts,
  };

  return { props };
};
